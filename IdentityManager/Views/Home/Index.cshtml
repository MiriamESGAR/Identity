@inject Microsoft.AspNetCore.Authorization.IAuthorizationService Authoriation

@{
    ViewData["Title"] = "Home Page";
}

@{
    var isAdmin = await Authoriation.AuthorizeAsync(User, null, "Admin");
}
<html>
<body >
    <p class="text-center">
        <img src="~/media/productos/JabonLogo.jpg"  width="196" height="118"/>
    </p>
</body>
</html>
<div class="text-center">
    <h1 class="display-4 text-primary">Fabrica de Jabón "EL TORO"</h1>


   

    <h2>
        Son una empresa líder en la fabricación de jabones biodegradables, de alta calidad.
        Los empleados son capacitados para elaborar con higiene los productos, los valores <rb>que se inculcan dentro de esta empresa son respeto, responsabilidad, honestidad, autonomía, capacidad, colaboración, empatía y esfuerzo
    </h2>
    @if (User.Identity.IsAuthenticated)
    {
        var twofactor = ViewData["TwoFactorEnabled"];
        if (twofactor != null && twofactor.ToString().ToLower() == "true")
        {
<a asp-action="RemoveAuthenticator" asp-controller="Account" class="btn btn-warning">Reset & Remove Two Factor Auth</a> }
else
{
<a asp-action="EnableAuthenticator" asp-controller="Account">Setup Two Factor Auth</a> }
<br /><br />

                @if (isAdmin.Succeeded)
                {
<h2>Your role is - Admin</h2> }
else
{
<h2>Your role is - Non Admin</h2>}}


    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>
